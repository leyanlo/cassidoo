function findPalindromes() {
  const fs = require('fs');
  const path = require('path');

  return ['first_page.txt', 'second_page.txt', 'third_page.txt'].map(
    (filename) => {
      const file = fs.readFileSync(path.join(__dirname, filename), 'utf8');

      const counts = file.split('\n').map(
        (line) =>
          line
            .split(' ')
            .map((word) => word === word.split('').reverse().join(''))
            .filter(Boolean).length
      );

      const lines = Object.entries(counts)
        .filter(([, c]) => c > 0)
        .map(([i]) => +i + 1);

      return `${filename} has ${counts.reduce(
        (acc, n) => acc + n
      )} palindromes on lines ${lines.slice(0, -1).join(', ')}, and ${
        lines[lines.length - 1]
      }`;
    }
  );
}

test('findPalindromes', () => {
  expect(findPalindromes()).toEqual([
    'first_page.txt has 131 palindromes on lines 3, 4, 8, 9, 11, 13, 17, 18, 20, 25, 26, 28, 30, 34, 46, 52, 54, 55, 56, 60, 69, 76, 77, 78, 83, 86, 87, 88, 89, 90, 92, 95, 97, 98, 99, 100, 102, 106, 112, 114, 115, 116, 117, 119, 120, 121, 125, 128, 132, 134, 135, 136, 137, 139, 141, 154, 155, 156, 160, 162, 166, 167, 168, 170, 172, 173, 174, 177, 178, 180, 184, 186, 187, 190, 200, 201, 213, 217, 222, 223, 227, 231, 234, 235, 241, 250, 255, 259, 268, 271, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 293, 295, 297, 298, 299, 300, 301, 305, 306, 315, 323, 324, 325, 337, 338, 342, 343, 344, 348, and 354',
    'second_page.txt has 278 palindromes on lines 3, 8, 11, 13, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 44, 45, 47, 49, 50, 52, 55, 60, 63, 64, 66, 68, 69, 72, 77, 79, 81, 84, 89, 91, 93, 94, 95, 98, 99, 100, 102, 109, 111, 112, 113, 114, 118, 123, 130, 131, 132, 133, 136, 137, 138, 139, 141, 144, 149, 152, 153, 155, 156, 158, 160, 166, 167, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 209, 211, 212, 213, 214, 215, 216, 219, 221, 224, 225, 227, 229, 232, 233, 235, 237, 239, 241, 243, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 278, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 319, 320, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 341, 343, 344, 345, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 371, 376, 377, 380, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, and 405',
    'third_page.txt has 185 palindromes on lines 3, 4, 10, 14, 17, 18, 28, 44, 46, 47, 48, 49, 52, 54, 56, 64, 66, 68, 70, 78, 83, 84, 87, 91, 93, 97, 104, 105, 115, 116, 118, 120, 125, 136, 137, 144, 145, 146, 152, 157, 159, 160, 162, 169, 171, 173, 177, 187, 188, 192, 199, 204, 210, 211, 212, 218, 220, 227, 230, 231, 237, 240, 245, 246, 248, 249, 250, 251, 254, 256, 259, 261, 266, 271, 272, 273, 274, 275, 276, 279, 280, 283, 285, 288, 291, 292, 293, 294, 297, 299, 300, 302, 303, 305, 306, 307, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 329, 330, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 349, 354, 355, 357, 359, 360, 361, 366, 368, 369, 371, 372, 373, 374, 375, 381, 382, 384, 385, 386, 387, 388, 389, 391, 393, 395, 398, 403, and 411',
  ]);
});
